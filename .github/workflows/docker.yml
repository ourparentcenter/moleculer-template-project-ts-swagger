name: Test with Docker

on: [push, pull_request]

jobs:
    test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [16.x, 17.x, 18.x]
                # transporter: [NATS, Redis, MQTT, AMQP, AMQP10, STAN, Kafka, TCP]
                transporter: [NATS, Redis, MQTT, AMQP, STAN, Kafka, TCP]
            fail-fast: false
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }} with ${{ matrix.transporter }} transporter
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'yarn'

            - name: Cache
              uses: actions/cache@v3
              with:
                  path: ~/.yarn
                  key: cache-node-modules-${{ matrix.node-version }}

            - name: Install dependencies
              run: yarn install --immutable

            - name: Create answers file
              run: node update-answers.js
              working-directory: ./test/ci
              env:
                  TRANSPORTER: ${{ matrix.transporter }}

            - name: Generate project with '${{ matrix.transporter }}' transporter
              run: yarn test

            # - name: Run lint in the generated project
            #   run: npm run lint
            #   working-directory: ./ci-test

            - name: Run tests in the generated project
              run: yarn test
              working-directory: ./ci-test

            - run: cat ./ci-test/docker-compose.env
            - run: cat ./ci-test/docker-compose.yml

            - name: Start containers
              run: yarn run dc:up
              working-directory: ./ci-test

            - name: Sleeping 60 secs
              run: sleep 60s

            - name: Sleeping more in case of AMQP transporter
              run: sleep 180
              if: contains(matrix.transporter, 'AMQP')

            - name: Check containers
              run: docker-compose ps
              working-directory: ./ci-test

            - name: Check logs
              run: docker-compose logs
              working-directory: ./ci-test

            - name: Check Greeter service
              run: curl --silent --show-error --fail http://localhost:3000/api/v1/greeter/hello
            - name: Chesk Products Service
              run: curl --silent --show-error --fail http://localhost:3000/api/v1/products
            - name: Check Swagger-Stats dashboard
              run: curl --silent --show-error --fail http://localhost:3000/api/ #swagger-stats dashboard
            - name: Check Swagger-Ui
              run: curl --silent --show-error --fail http://localhost:3000/openapi/ #swagger-UI

            - name: Stop containers
              run: yarn run dc:down
              working-directory: ./ci-test
